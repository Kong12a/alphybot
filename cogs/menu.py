import discord
from discord.ext import commands
from discord.ui import Button, View, Modal, InputText
import requests
import mysql.connector

# ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• MySQL
try:
    db = mysql.connector.connect(
        host="bhfzkcw6h9o6pheqvmm7-mysql.services.clever-cloud.com",
        user="ucvmfdraedrvbjuy",
        password="lc0bkqgnudvsyA2ZdGa1",
        database="bhfzkcw6h9o6pheqvmm7"
    )
    cursor = db.cursor()
except mysql.connector.Error as err:
    print(f"Error: {err}")
    exit(1)

class AddUserModal(Modal):
    def __init__(self):
        super().__init__(title="„Äê Create „Äë")
        self.add_item(InputText(label="USERNAME (RANDOM = ‡∏≠‡∏∏‡πà‡∏ô‡∏ä‡∏∑‡πà‡∏≠)", placeholder="username 3-20 character", required=True))
        self.add_item(InputText(label="PASSWORD (‡πÄ‡∏ß‡πâ‡∏ô‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏•‡∏∏‡πâ‡∏ô)", placeholder="password 1-20 character", required=False, style=discord.InputTextStyle.short))
        self.add_item(InputText(label="AMOUNT (‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 100 ID/‡∏Ñ‡∏£‡∏±‡πâ‡∏á)", placeholder="amount (maximum 100)", required=True))

    async def callback(self, interaction: discord.Interaction):
        username = self.children[0].value
        password = self.children[1].value
        amount = self.children[2].value
        await interaction.response.send_message(f"‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!\nUsername: {username}\nPassword: {password or '‡∏™‡∏∏‡πà‡∏°'}\nAmount: {amount}", ephemeral=True)

class DonationBot(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @commands.slash_command(name="top_donors", description="Displays the top 10 donors")
    async def top_donors(self, ctx):
        try:
            cursor.execute("SELECT username, amount FROM topups ORDER BY amount DESC LIMIT 10")
            results = cursor.fetchall()

            description = "\n".join([f"**{i+1}.** {row[0]} - **{row[1]:,}** ‡∏ö‡∏≤‡∏ó" for i, row in enumerate(results)])
            embed = discord.Embed(title="üèÜ ‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 10 ‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö üèÜ", description=description, color=discord.Color.green())
            embed.set_thumbnail(url="https://i.imgur.com/4M34hi2.png")
            embed.set_footer(text="‡∏£‡∏∞‡∏ö‡∏ö‡∏ô‡∏µ‡πâ‡∏ñ‡∏π‡∏Å‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÇ‡∏î‡∏¢‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô", icon_url="https://i.imgur.com/AfFp7pu.png")
            embed.set_image(url="https://i.pinimg.com/originals/2f/56/90/2f5690ee185f5345025b1a5b0bf2c8aa.gif")
            view = View(timeout=None)

            # ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
            button_user = Button(label="‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ", style=discord.ButtonStyle.green, emoji="üë§")
            async def button_user_callback(interaction):
                await interaction.response.send_modal(AddUserModal())
            button_user.callback = button_user_callback
            view.add_item(button_user)

            # ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô
            button_topup = Button(label="‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô", style=discord.ButtonStyle.blurple, emoji="üí∞")
            async def button_topup_callback(interaction):
                await interaction.response.send_modal(TopUpModal())
            button_topup.callback = button_topup_callback
            view.add_item(button_topup)

            # ‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô
            button_test_topup = Button(label="‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô", style=discord.ButtonStyle.red, emoji="üîß")
            async def button_test_topup_callback(interaction):
                await interaction.response.send_modal(TestTopUpModal())
            button_test_topup.callback = button_test_topup_callback
            view.add_item(button_test_topup)

            # ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏°‡∏ô‡∏π
            button_menu = Button(label="‡πÄ‡∏°‡∏ô‡∏π", style=discord.ButtonStyle.gray, emoji="üìú")
            async def button_menu_callback(interaction):
                await interaction.response.send_message("‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏•‡∏±‡∏Å: [‡∏Å‡∏î‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà](https://example.com/menu)", ephemeral=True)
            button_menu.callback = button_menu_callback
            view.add_item(button_menu)

            await ctx.respond(embed=embed, view=view)
        except mysql.connector.Error as err:
            await ctx.respond(f"‚ùå ‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: {err}", ephemeral=True)

class TopUpModal(Modal):
    def __init__(self):
        super().__init__(title="‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô")
        self.add_item(InputText(label="‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™‡∏≠‡∏±‡∏á‡πÄ‡∏õ‡∏≤", placeholder="‡∏£‡∏´‡∏±‡∏™‡∏≠‡∏±‡∏á‡πÄ‡∏õ‡∏≤", required=True))

    async def callback(self, interaction: discord.Interaction):
        code = self.children[0].value
        try:
            response = requests.post('https://alphybot.onrender.com/topup', json={'code': code})
            result = response.text
            print(result)  # ‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏à‡∏≤‡∏Å API
            response.raise_for_status()  # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏´‡∏±‡∏™‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ HTTP
            if response.status_code == 200:
                amount = int(result.split('‡∏à‡∏≥‡∏ô‡∏ß‡∏ô ')[1].split(' ‡πÅ‡∏•‡πâ‡∏ß!')[0])
                print(amount)
                username = interaction.user.name
                
                # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏á MySQL
                cursor.execute("INSERT INTO topups (username, amount) VALUES (%s, %s)", (username, amount))
                db.commit()

                await interaction.response.send_message(f"‚úÖ ‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏ï‡∏¥‡∏°: {amount} ‡∏ö‡∏≤‡∏ó", ephemeral=True)
            else:
                await interaction.response.send_message(f"‚ùå ‡∏•‡∏¥‡πâ‡∏á‡∏Ñ‡πå‡∏≠‡∏±‡∏á‡πÄ‡∏õ‡∏≤‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß", ephemeral=True)
        except requests.RequestException as e:
            await interaction.response.send_message(f"‚ùå ‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ API ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: {e}", ephemeral=True)

class TestTopUpModal(Modal):
    def __init__(self):
        super().__init__(title="‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô")
        self.add_item(InputText(label="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏° (‡∏ö‡∏≤‡∏ó)", placeholder="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô", required=True))

    async def callback(self, interaction: discord.Interaction):
        amount = self.children[0].value
        username = interaction.user.name
        
        # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏á MySQL
        try:
            cursor.execute("INSERT INTO topups (username, amount) VALUES (%s, %s)", (username, amount))
            db.commit()
            await interaction.response.send_message(f"‚úÖ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏ï‡∏¥‡∏°: {amount} ‡∏ö‡∏≤‡∏ó", ephemeral=True)
        except mysql.connector.Error as err:
            await interaction.response.send_message(f"‚ùå ‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: {err}", ephemeral=True)

def setup(bot):
    bot.add_cog(DonationBot(bot))

